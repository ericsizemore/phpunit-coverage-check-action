name: "Build Docker image with latest main library release"

on:
  workflow_dispatch:
  schedule:
    - cron: '31 12 * * *'

jobs:
  docker:
    name: "Push tagged docker image"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      packages: write
      contents: read
      attestations: write
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v5
        with:
          ref: master

      - name: "Update Dockerfile with latest version"
        id: fetch_version
        run: |
          last=$(curl -s https://repo.packagist.org/p2/esi/phpunit-coverage-check.json|jq '[.. | objects | .version] | max')
          last=$(echo $last | tr -d '"')
          echo "Last PHPUnit Coverage Check version is $last"
          echo "last=$last" >> $GITHUB_OUTPUT

          sed -i -re "s/require esi\/phpunit-coverage-check:3.0.0/require esi\/phpunit-coverage-check:$last/" Dockerfile
          cat Dockerfile

      - name: "Docker login"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Build images"
        run: docker build -t ghcr.io/ericsizemore/phpunit-coverage-check-action:${{ steps.fetch_version.outputs.last }} -t ghcr.io/ericsizemore/phpunit-coverage-check-action:latest .

      - name: "Publish"
        run: |
          docker push ghcr.io/ericsizemore/phpunit-coverage-check-action:${{ steps.fetch_version.outputs.last }}
          docker push ghcr.io/ericsizemore/phpunit-coverage-check-action:latest

      - name: "Get digest"
        id: get-digest
        run: |
          digest=$(docker manifest inspect ghcr.io/ericsizemore/phpunit-coverage-check-action:latest -v | jq -r '.Descriptor.digest')
          echo "digest=$digest" >> "$GITHUB_OUTPUT"

      - name: "Attest"
        uses: actions/attest-build-provenance@v3
        id: attest
        with:
          subject-name: ghcr.io/ericsizemore/phpunit-coverage-check-action
          subject-digest: ${{ steps.get-digest.outputs.digest }}
          push-to-registry: false

  workflow-keepalive:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: liskin/gh-workflow-keepalive@v1.2.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
